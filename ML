import matplotlib.pyplot as plt
import tensorflow as tf
import numpy as np

# 下载数据    (我的数据位置下载在‘C:\Users\Administrator\.keras’)
(train_img,train_lab),(test_img,test_lab) = tf.keras.datasets.fashion_mnist.load_data()

# 原数据归一化
train_img = train_img/255
test_img = test_img/255

# 建立模型
model = tf.keras.Sequential()
model.add(tf.keras.layers.Flatten(input_shape=(28,28)))
model.add(tf.keras.layers.Dense(128,activation='relu'))
# model.add(tf.keras.layers.Dropout(0.4))
model.add(tf.keras.layers.Dense(128,activation='relu'))
# model.add(tf.keras.layers.Dropout(0.4))
# model.add(tf.keras.layers.Dense(128,activation='relu'))
# model.add(tf.keras.layers.Dropout(0.4))
# model.add(tf.keras.layers.Dense(128,activation='relu'))
# model.add(tf.keras.layers.Dropout(0.4))
model.add(tf.keras.layers.Dense(10,activation='softmax'))

# 标签独热编码
# train_lab = tf.keras.utils.to_categorical(train_lab)
# test_lab = tf.keras.utils.to_categorical(test_lab)

# 编译模型
model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['acc'])

# 训练模型
model.fit(train_img,train_lab,epochs=10)

#模型 评估
loss, acc = model.evaluate(test_img,test_lab)
print('loss = {}, acc = {}'.format(loss,acc))
model.save('model.h5')

# # 模型下载
# model = tf.keras.models.load_model('model.h5')
# # 预测
# p = model.predict(test_img)
# for i in range(100):
#     print('pre：{}，real：{}'.format(np.argmax(p[i]),test_lab[i]))
